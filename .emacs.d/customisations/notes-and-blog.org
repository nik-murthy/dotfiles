#+TITLE: Emacs Writing & Blogging Setup
#+AUTHOR: Nik M
#+PROPERTY: header-args :tangle 04-writing.el :results silent

* Org-mode Enhancements

** Core Org Settings

#+BEGIN_SRC emacs-lisp
(use-package org
  :config
  (setq org-hide-emphasis-markers t
        org-startup-indented t
        org-pretty-entities t
        org-ellipsis " â¤µ"
        org-directory "~/workspace/notes"
        org-default-notes-file "~/notes/inbox.org"))
#+END_SRC


** Visual Tweaks with org-modern

#+BEGIN_SRC emacs-lisp
(use-package org-modern
  :hook (org-mode . org-modern-mode))
#+END_SRC

* Capture Templates

#+BEGIN_SRC emacs-lisp
(setq org-capture-templates
      `(
        ;; Task inbox
        ("t" "Todo [Inbox]" entry
         (file+headline ,(concat org-directory "/inbox.org") "Tasks")
         "* TODO %?\n  %U\n  %a")

        ;; Quick note
        ("n" "Note" entry
         (file+headline ,(concat org-directory "/quick-notes.org") "Quick Notes")
         "* %?\n  %U\n  %a")

        ;; Journal entry (by date tree)
        ("j" "Journal" entry
         (file+datetree ,(concat org-directory "/journal.org"))
         "* %U\n\n%?")

        ;; One-file-per-post blog draft
        ("B" "Blog post file" plain
         (file+head "blog/posts/${slug}.org"
                    "#+title: ${title}\n#+date: %U\n#+hugo_tags: \n#+hugo_categories: \n\n")
         "%?"
         :jump-to-captured t)

        ;; Org-roam note capture
        ("r" "Roam Note" plain
         (function org-roam-capture-)
         "%?"
         :if-new (file+head "roam/${slug}.org"
                            "#+title: ${title}\n#+date: %U\n\n"))
        ))

(global-set-key (kbd "C-c c") 'org-capture)
#+END_SRC

* Backup notes on emacs exit

#+begin_src emacs-lisp
(defun backup-org-notes ()
  (let* ((src (expand-file-name "~/workspace/notes/"))
         (dst (expand-file-name "/mnt/data1/org-notes-backup/"))
         (log (expand-file-name "~/workspace/dotfiles/.emacs.d/backup-notes.log")))
    (message "Running backup-org-notes...")
    (when (file-directory-p dst)
      (call-process "rsync" nil log nil "-avh" "--delete" src dst)
      (message "Backup finished."))))

(add-hook 'kill-emacs-hook #'backup-org-notes)
#+end_src


* Present with org-re-reveal

#+begin_src emacs-lisp
  (use-package org-re-reveal
    :ensure t
    :after ox
    :config
    (setq org-re-reveal-root "https://cdn.jsdelivr.net/npm/reveal.js@4.3.1")
    (setq org-re-reveal-revealjs-version "4")) 
#+end_src

* Blogging with ox-hugo

#+BEGIN_SRC emacs-lisp
(use-package ox-hugo
  :after ox)
#+END_SRC
