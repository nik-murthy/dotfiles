#+TITLE: Emacs Completion Setup
#+AUTHOR: Nik M
#+PROPERTY: header-args :tangle completions.el :results silent

* Completion Framework Setup

** Vertico
#+BEGIN_SRC emacs-lisp
(use-package vertico
  :ensure t
  :init
  (vertico-mode 1))
#+END_SRC

** Orderless
#+BEGIN_SRC emacs-lisp
(use-package orderless
  :ensure t
  :init
  (setq completion-styles '(orderless basic)
        completion-category-defaults nil
        completion-category-overrides '((file (styles partial-completion)))))
#+END_SRC

** Marginalia
#+BEGIN_SRC emacs-lisp
(use-package marginalia
  :ensure t
  :init
  (marginalia-mode 1))
#+END_SRC

** Consult
#+BEGIN_SRC emacs-lisp
(use-package consult
  :ensure t
  :bind
  (("C-s" . consult-line)               ;; Search lines in buffer
   ("C-x b" . consult-buffer)           ;; Enhanced buffer switcher
   ("M-y" . consult-yank-pop)           ;; Browse kill ring
   ("C-x M-:" . consult-complex-command) ;; M-x history
   ("M-g g" . consult-goto-line)        ;; Go to line
   ("M-g M-g" . consult-goto-line)
   ("M-g o" . consult-outline)          ;; Buffer outline
   ("C-c k" . consult-ripgrep)          ;; Ripgrep search
   ("C-c f" . consult-find)           ;; Find files with consult
   )
  :init
  (setq consult-project-root-function #'projectile-project-root)
  (setq consult-preview-key 'any))
#+END_SRC

** Corfu (In-Buffer Completion)
#+BEGIN_SRC emacs-lisp
(use-package corfu
  :ensure t
  :init
  (global-corfu-mode)
  :custom
  (corfu-cycle t)                ;; Enable cycling through candidates
  (corfu-auto t)                 ;; Enable auto completion
  (corfu-auto-delay 0.2)
  (corfu-auto-prefix 1)
  (corfu-preview-current nil)   ;; Disable preview
  :bind
  (:map corfu-map
        ("TAB" . corfu-next)
        ([tab] . corfu-next)
        ("S-TAB" . corfu-previous)
        ([backtab] . corfu-previous)))
#+END_SRC

** Yasnippet
#+BEGIN_SRC emacs-lisp
(use-package yasnippet
  :ensure t
  :init
  (yas-global-mode 1)
  :config
  (yas-reload-all)
  )

(use-package yasnippet-snippets
  :ensure t
  :after yasnippet)
#+END_SRC
